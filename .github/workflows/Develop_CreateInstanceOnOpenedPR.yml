name: Develop - Create Instance on Opened or Reopened PR
on:
    pull_request:
        types: [opened, reopened]
        branches: # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
            - '**' # matches every branch
    workflow_dispatch:
env:
    DEVELOP_HOST: ${{ secrets.DEVELOP_HOST}}
    DEVELOP_SSH_USERNAME: ${{ secrets.DEVELOP_SSH_USERNAME}}
    DEVELOP_DOMAIN_NAME: ${{ secrets.DEVELOP_DOMAIN_NAME}}
    MAIN_HOST: ${{ secrets.MAIN_HOST}}
    MAIN_SSH_USERNAME: ${{ secrets.MAIN_SSH_USERNAME}}
jobs:
    create_instance:
        name: Create Instance on Opened or Reopened PR
        runs-on: ubuntu-latest
        steps:
            - name: Install SSH Key
              uses: shimataro/ssh-key-action@v2
              with:
                key: ${{ secrets.SSH_PRIVATE_KEY }}
                known_hosts: unnecessary
            - name: Adding Known Hosts Develop
              run: ssh-keyscan -H $DEVELOP_HOST  >> ~/.ssh/known_hosts
            - name: Adding Known Hosts Main
              run: ssh-keyscan -H $MAIN_HOST  >> ~/.ssh/known_hosts
            - name: Get Available database name
              run: DATABASE_NAME=$(ssh $DEVELOP_SSH_USERNAME@$DEVELOP_HOST "mysql -h 127.0.0.1 -u '${{ secrets.DEVELOP_DB_USERNAME }}' --password='${{ secrets.DEVELOP_DB_PASSWORD }}' -N -e 'SELECT schema_name FROM information_schema.schemata where SCHEMA_NAME not in (SELECT TABLE_SCHEMA FROM information_schema.columns Group by TABLE_SCHEMA ) LIMIT 1'") && echo "DATABASE_NAME=$DATABASE_NAME" >> $GITHUB_ENV && if [ $DATABASE_NAME = "-d" ]; then echo 1; else echo 0; fi
            - name: Extract branch name
              run: echo 'BRANCH='${{ github.head_ref }} >> $GITHUB_ENV
            - name: Extract branch clean
              run: echo 'BRANCH_CLEAN='`echo ${{ env.BRANCH }} | sed -e 's/[^a-zA-Z0-9_/]//g'` >> $GITHUB_ENV
            - name: echo environment variables
              run: echo ${{ env }}
            - name: Create Instance in develop through Main
              run: ssh $MAIN_SSH_USERNAME@$MAIN_HOST "cd scripts/create && bash create.sh -b ${{ env.BRANCH }} -i $DEVELOP_DOMAIN_NAME -p /web/${{ env.BRANCH_CLEAN }} -db ${{ env.DATABASE_NAME }} -d -y"
            - name: Set Clean git branch
              run: ssh $DEVELOP_SSH_USERNAME@$DEVELOP_HOST "test -e /web/${{ env.BRANCH_CLEAN }}" && (echo "Directory branch exists" && ssh $DEVELOP_SSH_USERNAME@$DEVELOP_HOST "cd /web/${{ env.BRANCH_CLEAN }} && git stash && git reset && git pull")
            - name: Create or Edit PR comment
              uses: thollander/actions-comment-pull-request@v1
              with:
                message: |
                    Instancia de develop cargada: https://${{ env.DEVELOP_DOMAIN_NAME}}/${{ env.BRANCH_CLEAN }}
                    Nombre de la base de datos: ${{ env.DATABASE_NAME }}
                comment_includes: 'Instancia de develop cargada:'
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
